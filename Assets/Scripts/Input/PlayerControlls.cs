//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Input/PlayerControlls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControlls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControlls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControlls"",
    ""maps"": [
        {
            ""name"": ""PlayerInputs"",
            ""id"": ""2d407895-3e77-40ac-8d05-0647e72c188c"",
            ""actions"": [
                {
                    ""name"": ""Player1MoveLeft"",
                    ""type"": ""Button"",
                    ""id"": ""59bbbbe4-52c1-471d-b426-304285cf08af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player1MoveRight"",
                    ""type"": ""Button"",
                    ""id"": ""91d2a88b-6801-436f-8a36-9b2d23e5e3f3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player1UseBoost"",
                    ""type"": ""Button"",
                    ""id"": ""c371e036-fd3e-4c16-8af5-c1894c061271"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player2MoveLeft"",
                    ""type"": ""Button"",
                    ""id"": ""d1da3949-85ca-4a81-9c85-73b2eb286f0a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player2MoveRight"",
                    ""type"": ""Button"",
                    ""id"": ""3aa9be17-399d-4e6f-a737-c7381b1d5594"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player2UseBoost"",
                    ""type"": ""Button"",
                    ""id"": ""99296e63-553b-429c-a8f9-1a9966dfa6fd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""New action"",
                    ""type"": ""Value"",
                    ""id"": ""12c197cd-019b-440d-8125-7148cb565809"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fc4a69e9-da89-4630-b846-b6f7ec3c8711"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1UseBoost"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a9cc78f6-1da9-4614-a112-4ec4ea642faa"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1MoveLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b135574a-5686-4df6-8b11-6c132778ef01"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1MoveRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6ea6df6-faaf-43cd-adf7-f9b2847afdac"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2UseBoost"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f1456352-2cb4-4e5e-830a-0d24f08e9a6e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2MoveLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c864945b-66f4-4216-bea7-0caf16079d4b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2MoveRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""be69da43-9fc9-4ee6-80bf-bf1810aeb533"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9bd61c5e-27a9-4607-b4d4-e65d86fde232"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f0f9bd39-b02c-48cb-acc9-171adb4b46b7"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""90169685-3151-4e6c-8a9b-681c53b37e85"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""19d4d6f7-9444-4ee4-98da-087c0cc6e45e"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerInputs
        m_PlayerInputs = asset.FindActionMap("PlayerInputs", throwIfNotFound: true);
        m_PlayerInputs_Player1MoveLeft = m_PlayerInputs.FindAction("Player1MoveLeft", throwIfNotFound: true);
        m_PlayerInputs_Player1MoveRight = m_PlayerInputs.FindAction("Player1MoveRight", throwIfNotFound: true);
        m_PlayerInputs_Player1UseBoost = m_PlayerInputs.FindAction("Player1UseBoost", throwIfNotFound: true);
        m_PlayerInputs_Player2MoveLeft = m_PlayerInputs.FindAction("Player2MoveLeft", throwIfNotFound: true);
        m_PlayerInputs_Player2MoveRight = m_PlayerInputs.FindAction("Player2MoveRight", throwIfNotFound: true);
        m_PlayerInputs_Player2UseBoost = m_PlayerInputs.FindAction("Player2UseBoost", throwIfNotFound: true);
        m_PlayerInputs_Newaction = m_PlayerInputs.FindAction("New action", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerInputs
    private readonly InputActionMap m_PlayerInputs;
    private List<IPlayerInputsActions> m_PlayerInputsActionsCallbackInterfaces = new List<IPlayerInputsActions>();
    private readonly InputAction m_PlayerInputs_Player1MoveLeft;
    private readonly InputAction m_PlayerInputs_Player1MoveRight;
    private readonly InputAction m_PlayerInputs_Player1UseBoost;
    private readonly InputAction m_PlayerInputs_Player2MoveLeft;
    private readonly InputAction m_PlayerInputs_Player2MoveRight;
    private readonly InputAction m_PlayerInputs_Player2UseBoost;
    private readonly InputAction m_PlayerInputs_Newaction;
    public struct PlayerInputsActions
    {
        private @PlayerControlls m_Wrapper;
        public PlayerInputsActions(@PlayerControlls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Player1MoveLeft => m_Wrapper.m_PlayerInputs_Player1MoveLeft;
        public InputAction @Player1MoveRight => m_Wrapper.m_PlayerInputs_Player1MoveRight;
        public InputAction @Player1UseBoost => m_Wrapper.m_PlayerInputs_Player1UseBoost;
        public InputAction @Player2MoveLeft => m_Wrapper.m_PlayerInputs_Player2MoveLeft;
        public InputAction @Player2MoveRight => m_Wrapper.m_PlayerInputs_Player2MoveRight;
        public InputAction @Player2UseBoost => m_Wrapper.m_PlayerInputs_Player2UseBoost;
        public InputAction @Newaction => m_Wrapper.m_PlayerInputs_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_PlayerInputs; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerInputsActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerInputsActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerInputsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerInputsActionsCallbackInterfaces.Add(instance);
            @Player1MoveLeft.started += instance.OnPlayer1MoveLeft;
            @Player1MoveLeft.performed += instance.OnPlayer1MoveLeft;
            @Player1MoveLeft.canceled += instance.OnPlayer1MoveLeft;
            @Player1MoveRight.started += instance.OnPlayer1MoveRight;
            @Player1MoveRight.performed += instance.OnPlayer1MoveRight;
            @Player1MoveRight.canceled += instance.OnPlayer1MoveRight;
            @Player1UseBoost.started += instance.OnPlayer1UseBoost;
            @Player1UseBoost.performed += instance.OnPlayer1UseBoost;
            @Player1UseBoost.canceled += instance.OnPlayer1UseBoost;
            @Player2MoveLeft.started += instance.OnPlayer2MoveLeft;
            @Player2MoveLeft.performed += instance.OnPlayer2MoveLeft;
            @Player2MoveLeft.canceled += instance.OnPlayer2MoveLeft;
            @Player2MoveRight.started += instance.OnPlayer2MoveRight;
            @Player2MoveRight.performed += instance.OnPlayer2MoveRight;
            @Player2MoveRight.canceled += instance.OnPlayer2MoveRight;
            @Player2UseBoost.started += instance.OnPlayer2UseBoost;
            @Player2UseBoost.performed += instance.OnPlayer2UseBoost;
            @Player2UseBoost.canceled += instance.OnPlayer2UseBoost;
            @Newaction.started += instance.OnNewaction;
            @Newaction.performed += instance.OnNewaction;
            @Newaction.canceled += instance.OnNewaction;
        }

        private void UnregisterCallbacks(IPlayerInputsActions instance)
        {
            @Player1MoveLeft.started -= instance.OnPlayer1MoveLeft;
            @Player1MoveLeft.performed -= instance.OnPlayer1MoveLeft;
            @Player1MoveLeft.canceled -= instance.OnPlayer1MoveLeft;
            @Player1MoveRight.started -= instance.OnPlayer1MoveRight;
            @Player1MoveRight.performed -= instance.OnPlayer1MoveRight;
            @Player1MoveRight.canceled -= instance.OnPlayer1MoveRight;
            @Player1UseBoost.started -= instance.OnPlayer1UseBoost;
            @Player1UseBoost.performed -= instance.OnPlayer1UseBoost;
            @Player1UseBoost.canceled -= instance.OnPlayer1UseBoost;
            @Player2MoveLeft.started -= instance.OnPlayer2MoveLeft;
            @Player2MoveLeft.performed -= instance.OnPlayer2MoveLeft;
            @Player2MoveLeft.canceled -= instance.OnPlayer2MoveLeft;
            @Player2MoveRight.started -= instance.OnPlayer2MoveRight;
            @Player2MoveRight.performed -= instance.OnPlayer2MoveRight;
            @Player2MoveRight.canceled -= instance.OnPlayer2MoveRight;
            @Player2UseBoost.started -= instance.OnPlayer2UseBoost;
            @Player2UseBoost.performed -= instance.OnPlayer2UseBoost;
            @Player2UseBoost.canceled -= instance.OnPlayer2UseBoost;
            @Newaction.started -= instance.OnNewaction;
            @Newaction.performed -= instance.OnNewaction;
            @Newaction.canceled -= instance.OnNewaction;
        }

        public void RemoveCallbacks(IPlayerInputsActions instance)
        {
            if (m_Wrapper.m_PlayerInputsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerInputsActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerInputsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerInputsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerInputsActions @PlayerInputs => new PlayerInputsActions(this);
    public interface IPlayerInputsActions
    {
        void OnPlayer1MoveLeft(InputAction.CallbackContext context);
        void OnPlayer1MoveRight(InputAction.CallbackContext context);
        void OnPlayer1UseBoost(InputAction.CallbackContext context);
        void OnPlayer2MoveLeft(InputAction.CallbackContext context);
        void OnPlayer2MoveRight(InputAction.CallbackContext context);
        void OnPlayer2UseBoost(InputAction.CallbackContext context);
        void OnNewaction(InputAction.CallbackContext context);
    }
}
